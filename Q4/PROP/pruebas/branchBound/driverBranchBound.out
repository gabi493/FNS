DriverBrancBound.
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 1 seleccionada.
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 5 seleccionada.
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 6 seleccionada.
1 3 0 2 
cost: 28.0
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 7 seleccionada.
1 3 0 2 Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 2 seleccionada.
Tama√±o es = 4
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 3 seleccionada.
La matriz de Afinidad = [[I@193bd72
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 4 seleccionada.
La matriz de Distancia = [[I@7aa1d2
Elige una opicion:
	 1) ctrlPersistencia()
	 2) getTam()
	 3) getAfin()
	 4) getDist()
	 5) leerJuegoDePrueba()
	 6) Ejecutar BranchBound
	 7) guardarResultado(int[] res, String ruta)
	 0) Salir

Opcion 0 seleccionada.
